#!/usr/bin/env zsh

# start gpg-agent if not already running
GPG_AGENT_INFO_FILE=$HOME/.gpg-agent-info
if [ `uname -s` = 'Darwin' ];then
	GPG_AGENT_BIN=/usr/local/MacGPG2/bin/gpg-agent
else
	GPG_AGENT_BIN=/usr/bin/gpg-agent
fi

gpg_agent_start()
{
	sleep 0.$RANDOM # hack to avoid race condition
	eval `${GPG_AGENT_BIN} --daemon --write-env-file --enable-ssh-support --pinentry-program=/usr/bin/pinentry`
}

gpg_agent_pid()
{
	test -f ${GPG_AGENT_INFO_FILE} || return 1
	echo `head -1 ${GPG_AGENT_INFO_FILE} | cut -d : -f2`
}

# start gpg agent if we can't get the pid
GPG_AGENT_PID=`gpg_agent_pid`
if [ -z "${GPG_AGENT_PID}" ];then
	gpg_agent_start
fi

# try reading gpg info file
source ${GPG_AGENT_INFO_FILE}

# check if gpg is still running from old file, if not start it again
GPG_AGENT_PID=`gpg_agent_pid`
if ! kill -0 ${GPG_AGENT_PID} 2>/dev/null; then
	gpg_agent_start
fi

# export variables to environment
export GPG_AGENT_INFO
export SSH_AUTH_SOCK
export SSH_AGENT_PID
export GPG_TTY=`tty`
